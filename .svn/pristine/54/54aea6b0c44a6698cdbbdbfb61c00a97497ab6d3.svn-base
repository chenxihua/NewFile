<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.crm.dao.OutflowMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.crm.bean.Outflow">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="assigner" jdbcType="INTEGER" property="assigner" />
    <result column="assign_time" jdbcType="TIMESTAMP" property="assignTime" />
    <result column="handler" jdbcType="INTEGER" property="handler" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="last_order_time" jdbcType="TIMESTAMP" property="lastOrderTime" />
    <result column="outflow_time" jdbcType="TIMESTAMP" property="outflowTime" />
    <result column="defer_measure" jdbcType="VARCHAR" property="deferMeasure" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, assigner, assign_time, `handler`, handle_time, last_order_time, outflow_time, 
    defer_measure, reason, `status`
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.crm.bean.OutflowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from outflow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from outflow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from outflow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.crm.bean.OutflowExample">
    delete from outflow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.crm.bean.Outflow">
    insert into outflow (id, client_id, assigner, 
      assign_time, `handler`, handle_time, 
      last_order_time, outflow_time, defer_measure, 
      reason, `status`)
    values (#{id,jdbcType=INTEGER}, #{clientId,jdbcType=INTEGER}, #{assigner,jdbcType=INTEGER}, 
      #{assignTime,jdbcType=TIMESTAMP}, #{handler,jdbcType=INTEGER}, #{handleTime,jdbcType=TIMESTAMP}, 
      #{lastOrderTime,jdbcType=TIMESTAMP}, #{outflowTime,jdbcType=TIMESTAMP}, #{deferMeasure,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.crm.bean.Outflow">
    insert into outflow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="assigner != null">
        assigner,
      </if>
      <if test="assignTime != null">
        assign_time,
      </if>
      <if test="handler != null">
        `handler`,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="lastOrderTime != null">
        last_order_time,
      </if>
      <if test="outflowTime != null">
        outflow_time,
      </if>
      <if test="deferMeasure != null">
        defer_measure,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="assigner != null">
        #{assigner,jdbcType=INTEGER},
      </if>
      <if test="assignTime != null">
        #{assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handler != null">
        #{handler,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOrderTime != null">
        #{lastOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outflowTime != null">
        #{outflowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deferMeasure != null">
        #{deferMeasure,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.crm.bean.OutflowExample" resultType="java.lang.Long">
    select count(*) from outflow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update outflow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.assigner != null">
        assigner = #{record.assigner,jdbcType=INTEGER},
      </if>
      <if test="record.assignTime != null">
        assign_time = #{record.assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handler != null">
        `handler` = #{record.handler,jdbcType=INTEGER},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastOrderTime != null">
        last_order_time = #{record.lastOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outflowTime != null">
        outflow_time = #{record.outflowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deferMeasure != null">
        defer_measure = #{record.deferMeasure,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update outflow
    set id = #{record.id,jdbcType=INTEGER},
      client_id = #{record.clientId,jdbcType=INTEGER},
      assigner = #{record.assigner,jdbcType=INTEGER},
      assign_time = #{record.assignTime,jdbcType=TIMESTAMP},
      `handler` = #{record.handler,jdbcType=INTEGER},
      handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      last_order_time = #{record.lastOrderTime,jdbcType=TIMESTAMP},
      outflow_time = #{record.outflowTime,jdbcType=TIMESTAMP},
      defer_measure = #{record.deferMeasure,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.crm.bean.Outflow">
    update outflow
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="assigner != null">
        assigner = #{assigner,jdbcType=INTEGER},
      </if>
      <if test="assignTime != null">
        assign_time = #{assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handler != null">
        `handler` = #{handler,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOrderTime != null">
        last_order_time = #{lastOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outflowTime != null">
        outflow_time = #{outflowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deferMeasure != null">
        defer_measure = #{deferMeasure,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.crm.bean.Outflow">
    update outflow
    set client_id = #{clientId,jdbcType=INTEGER},
      assigner = #{assigner,jdbcType=INTEGER},
      assign_time = #{assignTime,jdbcType=TIMESTAMP},
      `handler` = #{handler,jdbcType=INTEGER},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      last_order_time = #{lastOrderTime,jdbcType=TIMESTAMP},
      outflow_time = #{outflowTime,jdbcType=TIMESTAMP},
      defer_measure = #{deferMeasure,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>