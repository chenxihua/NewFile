<?xml version="1.0" encoding="UTF-8"?>
<beans 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	
    xsi:schemaLocation="
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd        
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
	">

	<!-- 配置mvc控制器类的路径 -->  
 	<context:component-scan base-package="com.neuedu.crm.view" />
 	<context:component-scan base-package="com.neuedu.crm.aop" />
	<!--  启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy/>
 	
 	<!-- 注册转化器与验证器 -->
    <mvc:annotation-driven conversion-service="conversion-service" validator="validator" />
 	
 	<!-- 配置视图渲染器 --> 	
 	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 转换器服务工厂Bean -->
    <bean id="conversion-service"
        class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.neuedu.crm.utils.DateConverter" />
            </set>
        </property>
    </bean>

	<!-- 校验器，配置validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource" ref="validationMessageSource"></property>
    </bean>
    
    <!-- 配置validationMessageSource -->
    <bean id="validationMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 指定校验信息的资源文件的基本文件名称，不包括后缀，后缀默认是properties -->
        <property name="basenames">
            <list>
                <value>classpath:validationMessage</value>
            </list>
        </property>
        <!-- 指定文件的编码 -->
        <property name="defaultEncoding" value="utf8"></property>
        <!-- 对资源文件内容缓存的时间，单位秒 -->
        <property name="cacheSeconds" value="120"></property>
    </bean>	
	
	<!-- 配置上传组件 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">  
            <value>10485760</value>  
        </property>  
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

<!--       登录后不拦截静态资源,配置后不会被前置控制器拦截并可以直接访问
     mapping对应URL的网站地址，location对应文件在服务器的文件路径 -->
     <mvc:resources location="/common/" mapping="/common/**"/>
     <mvc:resources location="/css/" mapping="/css/**" />
     <mvc:resources location="/images/" mapping="/images/**" />
     <mvc:resources location="/js/" mapping="/js/**" />
     <mvc:resources location="/json/" mapping="/json/**" />     
     <mvc:resources location="/jsplug/" mapping="/jsplug/**" />     
     <mvc:resources location="/layui/" mapping="/layui/**" />
     <mvc:resources location="/transfer/" mapping="/transfer/**" />
     <mvc:resources location="/slide/" mapping="/slide/**" />
     <!-- 所有静态资源都不拦截 --> 
<!-- 	<mvc:default-servlet-handler /> -->
	
	<!--启用shiro注解 -->
	<aop:config proxy-target-class="true"></aop:config>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
<!-- shiro为集成springMvc 拦截异常，使用注解时无权限的跳转 -->
<!-- 	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				这里你可以根据需要定义N多个错误异常转发
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/pages/public/error.jsp</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/common</prop>
				<prop key="java.lang.IllegalArgumentException">redirect:/pages/public/error.jsp</prop>  参数错误(bizError.jsp)
				<prop key="java.lang.Exception">redirect:/pages/user/login.jsp</prop>  其他错误为'未定义错误'(unknowError.jsp)
			</props>
		</property>
	</bean>
	 -->
</beans>




