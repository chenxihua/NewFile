<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">
  
  <!-- 整合spring+mybatis时，使用了注解配置，需要配置组件扫描器，使用spring加载注解代码 -->
  <context:component-scan base-package="com.neuedu.crm.service"></context:component-scan>
  
  <!-- 整合数据库连接池，后续需要由spring进行数据库事务管理，故需要由spring统一管理数据库连接 -->
  <!-- classpath: 类路径  -->
  <!-- <context:property-placeholder location="classpath:db_config.properties"/> -->
  
  
  <bean id = "dataSource" class="org.apache.commons.dbcp2.BasicDataSource" >
  	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
  	<property name="url" value="jdbc:mysql://120.78.211.192/sonder?allowMultiQueries=true"></property>
  	<property name="username" value="javauser"></property>
  	<property name="password" value="123456"></property>
  </bean>
  	
  	<!-- 整合spring+mybatis的数据源 -->
  	<bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<!-- mybatis改用spring提供的数据源, 切换数据源 --> 	
  		<property name="dataSource" ref="dataSource"></property>
  		<!-- 引用mybatis全局配置文件，即由spring加载mybatis运行环境 -->
  		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
  		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
  	</bean>
  	
 	<!-- mapper接口是mybatis的组件，需要mybatis提供的整合类进行扫描 -->
 	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.neuedu.crm.dao"></property>		
 	</bean>
 	
 	<!-- 配置一个可以执行批量的sqlSession -->
 	<!-- 配置了这个，头文件的版本可能要更改 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
 	
 	<!-- 事务操作 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--   开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
 	
</beans>




